{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar swiper_1 = __importDefault(require(\"swiper\"));\n\nvar object_assign_1 = __importDefault(require(\"object-assign\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar hooks_1 = require(\"./hooks\");\n\nvar ReactIdSwiper = react_1.forwardRef(function (props, externalRef) {\n  var activeSlideKey = props.activeSlideKey,\n      ContainerEl = props.ContainerEl,\n      children = props.children,\n      containerClass = props.containerClass,\n      navigation = props.navigation,\n      noSwiping = props.noSwiping,\n      pagination = props.pagination,\n      parallax = props.parallax,\n      parallaxEl = props.parallaxEl,\n      WrapperEl = props.WrapperEl,\n      wrapperClass = props.wrapperClass,\n      rebuildOnUpdate = props.rebuildOnUpdate,\n      renderScrollbar = props.renderScrollbar,\n      renderPagination = props.renderPagination,\n      renderPrevButton = props.renderPrevButton,\n      renderNextButton = props.renderNextButton,\n      renderParallax = props.renderParallax,\n      rtl = props.rtl,\n      scrollbar = props.scrollbar,\n      shouldSwiperUpdate = props.shouldSwiperUpdate,\n      slideClass = props.slideClass,\n      loop = props.loop; // Define swiper instance ref\n\n  var swiperInstanceRef = react_1.useRef(null); // Internal ref\n\n  var swiperNodeRef = react_1.useRef(null); // Forked ref\n\n  var ref = hooks_1.useForkRef(swiperNodeRef, externalRef); // Get current active slide key\n\n  var getActiveSlideIndexFromProps = react_1.useCallback(function () {\n    if (!activeSlideKey) {\n      return null;\n    }\n\n    var activeSlideId = 0; // In loop mode first slide index should be 1\n\n    var id = loop ? 1 : 0;\n    react_1.Children.forEach(children, function (child) {\n      if (react_1.isValidElement(child)) {\n        if (child.key === activeSlideKey) {\n          activeSlideId = id;\n        }\n\n        id += 1;\n      }\n    });\n    return activeSlideId;\n  }, [activeSlideKey, children, loop]); // Destroy swiper\n\n  var destroySwiper = react_1.useCallback(function () {\n    if (swiperInstanceRef.current !== null) {\n      swiperInstanceRef.current.destroy(true, true);\n      utils_1.setRef(swiperInstanceRef, null);\n    }\n  }, []); // Initialize swiper\n\n  var buildSwiper = react_1.useCallback(function () {\n    if (swiperNodeRef.current && swiperInstanceRef.current === null) {\n      utils_1.setRef(swiperInstanceRef, new swiper_1.default(swiperNodeRef.current, object_assign_1.default({}, props)));\n    }\n  }, [props]); // Render slides\n\n  var renderContent = function renderContent(e) {\n    if (!utils_1.isReactElement(e)) {\n      return null;\n    }\n\n    var slideClassNames = [slideClass, e.props.className];\n\n    if (noSwiping) {\n      slideClassNames.push('swiper-no-swiping');\n    }\n\n    return react_1.cloneElement(e, __assign(__assign({}, e.props), {\n      className: slideClassNames.join(' ').trim()\n    }));\n  }; // Destroy Swiper instance when component is unmounted\n\n\n  react_1.useEffect(function () {\n    return function () {\n      return destroySwiper();\n    };\n  }, [destroySwiper]);\n  react_1.useEffect(function () {\n    buildSwiper();\n\n    if (swiperInstanceRef.current !== null) {\n      if (rebuildOnUpdate) {\n        destroySwiper();\n        buildSwiper();\n      } else if (shouldSwiperUpdate) {\n        swiperInstanceRef.current.update();\n      }\n\n      var numSlides = swiperInstanceRef.current.slides.length;\n\n      if (numSlides <= swiperInstanceRef.current.activeIndex) {\n        var index = Math.max(numSlides - 1, 0);\n        swiperInstanceRef.current.slideTo(index);\n      }\n\n      var slideToIndex = getActiveSlideIndexFromProps();\n\n      if (slideToIndex !== null) {\n        swiperInstanceRef.current.slideTo(slideToIndex);\n      }\n    }\n  }, [destroySwiper, getActiveSlideIndexFromProps, rebuildOnUpdate, shouldSwiperUpdate, buildSwiper]); // No render if wrapper elements are not provided\n\n  if (!children || !ContainerEl || !WrapperEl) {\n    return null;\n  } // Validate children props\n\n\n  if (!utils_1.validateChildren(children)) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Children should be react element or an array of react element!!');\n    }\n\n    return null;\n  }\n\n  return react_1.default.createElement(ContainerEl, {\n    className: containerClass,\n    dir: rtl && 'rtl',\n    ref: ref\n  }, parallax && parallaxEl && renderParallax && renderParallax(props), react_1.default.createElement(WrapperEl, {\n    className: wrapperClass\n  }, react_1.Children.map(children, renderContent)), pagination && pagination.el && renderPagination && renderPagination(props), scrollbar && scrollbar.el && renderScrollbar && renderScrollbar(props), navigation && navigation.nextEl && renderNextButton && renderNextButton(props), navigation && navigation.prevEl && renderPrevButton && renderPrevButton(props));\n}); // Default props\n\nReactIdSwiper.defaultProps = {\n  containerClass: 'swiper-container',\n  wrapperClass: 'swiper-wrapper',\n  slideClass: 'swiper-slide',\n  ContainerEl: 'div',\n  WrapperEl: 'div',\n  renderScrollbar: function renderScrollbar(_a) {\n    var scrollbar = _a.scrollbar;\n    return scrollbar ? react_1.default.createElement(\"div\", {\n      className: utils_1.classNames(scrollbar.el)\n    }) : null;\n  },\n  renderPagination: function renderPagination(_a) {\n    var pagination = _a.pagination;\n    return pagination ? react_1.default.createElement(\"div\", {\n      className: utils_1.classNames(pagination.el)\n    }) : null;\n  },\n  renderPrevButton: function renderPrevButton(_a) {\n    var navigation = _a.navigation;\n    return navigation ? react_1.default.createElement(\"div\", {\n      className: utils_1.classNames(navigation.prevEl)\n    }) : null;\n  },\n  renderNextButton: function renderNextButton(_a) {\n    var navigation = _a.navigation;\n    return navigation ? react_1.default.createElement(\"div\", {\n      className: utils_1.classNames(navigation.nextEl)\n    }) : null;\n  },\n  renderParallax: function renderParallax(_a) {\n    var parallaxEl = _a.parallaxEl;\n    return parallaxEl ? react_1.default.createElement(\"div\", {\n      className: utils_1.classNames(parallaxEl.el),\n      \"data-swiper-parallax\": parallaxEl.value\n    }) : null;\n  }\n};\nReactIdSwiper.displayName = 'ReactIdSwiper';\nexports.default = ReactIdSwiper;","map":null,"metadata":{},"sourceType":"script"}