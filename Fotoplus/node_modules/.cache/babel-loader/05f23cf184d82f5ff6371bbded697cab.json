{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _events = require(\"./helpers/events\");\n\nvar _find = _interopRequireDefault(require(\"./helpers/find\"));\n\nvar _getClosestTransformedParent = _interopRequireDefault(require(\"./helpers/getClosestTransformedParent\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar stickyOwnProps = ['mode', 'disabled', 'onFixedToggle', 'stickyStyle', 'stickyClassName', 'boundaryElement', 'scrollElement', 'bottomOffset', 'topOffset', 'positionRecheckInterval', 'noExceptionOnMissedScrollElement', 'wrapperCmp', 'holderCmp', 'hideOnBoundaryHit', 'offsetTransforms', 'holderProps'];\n\nvar isEqual = function isEqual(obj1, obj2) {\n  var styles1 = obj1.styles;\n  var styles2 = obj2.styles;\n\n  if (obj1.fixed !== obj2.fixed || obj1.height !== obj2.height || !styles1 && styles2 || styles1 && !styles2) {\n    return false;\n  }\n\n  for (var field in styles1) {\n    if (styles1.hasOwnProperty(field) && styles1[field] !== styles2[field]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar buildTopStyles = function buildTopStyles(container, props) {\n  var bottomOffset = props.bottomOffset,\n      hideOnBoundaryHit = props.hideOnBoundaryHit;\n  var top = container.top,\n      height = container.height,\n      width = container.width,\n      boundaryBottom = container.boundaryBottom;\n\n  if (hideOnBoundaryHit || top + height + bottomOffset < boundaryBottom) {\n    return {\n      top: top,\n      width: width,\n      position: 'fixed'\n    };\n  }\n\n  return {\n    width: width,\n    bottom: bottomOffset,\n    position: 'absolute'\n  };\n};\n\nvar buildBottomStyles = function buildBottomStyles(container, props) {\n  var bottomOffset = props.bottomOffset,\n      hideOnBoundaryHit = props.hideOnBoundaryHit;\n  var bottom = container.bottom,\n      height = container.height,\n      width = container.width,\n      boundaryTop = container.boundaryTop;\n\n  if (hideOnBoundaryHit || bottom - height - bottomOffset > boundaryTop) {\n    return {\n      width: width,\n      top: bottom - height,\n      position: 'fixed'\n    };\n  }\n\n  return {\n    width: width,\n    top: bottomOffset,\n    position: 'absolute'\n  };\n};\n\nvar buildStickyStyle = function buildStickyStyle(mode, props, container) {\n  return (mode === 'top' ? buildTopStyles : buildBottomStyles)(container, props);\n};\n\nvar Sticky = /*#__PURE__*/function (_Component) {\n  _inherits(Sticky, _Component);\n\n  function Sticky(props) {\n    var _this;\n\n    _classCallCheck(this, Sticky);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sticky).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"createWrapperRef\", function (wrapper) {\n      _this.wrapperEl = wrapper;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createHolderRef\", function (holder) {\n      _this.holderEl = holder;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkPosition\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          holderEl = _assertThisInitialize.holderEl,\n          wrapperEl = _assertThisInitialize.wrapperEl,\n          boundaryElement = _assertThisInitialize.boundaryElement,\n          scrollElement = _assertThisInitialize.scrollElement,\n          disabled = _assertThisInitialize.disabled;\n\n      var _this$props = _this.props,\n          mode = _this$props.mode,\n          onFixedToggle = _this$props.onFixedToggle,\n          offsetTransforms = _this$props.offsetTransforms;\n\n      if (disabled) {\n        if (_this.state.fixed) {\n          _this.setState({\n            fixed: false\n          });\n        }\n\n        return;\n      }\n\n      if (!holderEl.getBoundingClientRect || !wrapperEl.getBoundingClientRect) {\n        return;\n      }\n\n      var holderRect = holderEl.getBoundingClientRect();\n      var wrapperRect = wrapperEl.getBoundingClientRect();\n      var boundaryRect = boundaryElement ? getRect(boundaryElement) : {\n        top: -Infinity,\n        bottom: Infinity\n      };\n      var scrollRect = getRect(scrollElement);\n\n      var fixed = _this.isFixed(holderRect, wrapperRect, boundaryRect, scrollRect);\n\n      var offsets = null;\n\n      if (offsetTransforms && fixed) {\n        var closestTransformedParent = (0, _getClosestTransformedParent.default)(scrollElement);\n        if (closestTransformedParent) offsets = getRect(closestTransformedParent);\n      }\n\n      var newState = {\n        fixed: fixed,\n        height: wrapperRect.height,\n        styles: fixed ? buildStickyStyle(mode, _this.props, {\n          boundaryTop: mode === 'bottom' ? boundaryRect.top : 0,\n          boundaryBottom: mode === 'top' ? boundaryRect.bottom : 0,\n          top: mode === 'top' ? scrollRect.top - (offsets ? offsets.top : 0) : 0,\n          bottom: mode === 'bottom' ? scrollRect.bottom - (offsets ? offsets.bottom : 0) : 0,\n          width: holderRect.width,\n          height: wrapperRect.height\n        }) : null\n      };\n\n      if (fixed !== _this.state.fixed && onFixedToggle && typeof onFixedToggle === 'function') {\n        onFixedToggle(_this.state.fixed);\n      }\n\n      if (!isEqual(_this.state, newState)) {\n        _this.setState(newState);\n      }\n    });\n\n    _this.disabled = props.disabled;\n    _this.state = {\n      height: 0,\n      fixed: false,\n      styles: null\n    };\n    return _this;\n  }\n\n  _createClass(Sticky, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var me = _reactDom.default.findDOMNode(this);\n\n      var _this$props2 = this.props,\n          boundaryElement = _this$props2.boundaryElement,\n          scrollElement = _this$props2.scrollElement,\n          noExceptionOnMissedScrollElement = _this$props2.noExceptionOnMissedScrollElement,\n          positionRecheckInterval = _this$props2.positionRecheckInterval,\n          disabled = _this$props2.disabled;\n      this.disabled = disabled;\n      this.boundaryElement = (0, _find.default)(boundaryElement, me);\n\n      if (this.boundaryElement === window || this.boundaryElement === document) {\n        // such objects can't be used as boundary\n        // and in fact there is no point in such a case\n        this.boundaryElement = null;\n      }\n\n      this.scrollElement = scrollElement;\n\n      if (typeof scrollElement === 'string') {\n        this.scrollElement = (0, _find.default)(scrollElement, me);\n      }\n\n      if (this.scrollElement) {\n        (0, _events.listen)(this.scrollElement, ['scroll'], this.checkPosition);\n      } else if (!noExceptionOnMissedScrollElement) {\n        throw new Error('Cannot find scrollElement ' + scrollElement);\n      }\n\n      (0, _events.listen)(window, ['scroll', 'resize', 'pageshow', 'load'], this.checkPosition);\n      this.checkPosition();\n\n      if (positionRecheckInterval) {\n        this.checkPositionIntervalId = setInterval(this.checkPosition, positionRecheckInterval);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref) {\n      var disabled = _ref.disabled;\n\n      if (this.disabled !== disabled) {\n        this.disabled = disabled;\n        this.checkPosition();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.scrollElement) {\n        (0, _events.unlisten)(this.scrollElement, ['scroll'], this.checkPosition);\n      }\n\n      (0, _events.unlisten)(window, ['scroll', 'resize', 'pageshow', 'load'], this.checkPosition);\n      this.boundaryElement = null;\n      this.scrollElement = null;\n      clearTimeout(this.checkPositionIntervalId);\n    }\n  }, {\n    key: \"isFixed\",\n    value: function isFixed(holderRect, wrapperRect, boundaryRect, scrollRect) {\n      var _this$props3 = this.props,\n          hideOnBoundaryHit = _this$props3.hideOnBoundaryHit,\n          bottomOffset = _this$props3.bottomOffset,\n          topOffset = _this$props3.topOffset,\n          mode = _this$props3.mode;\n\n      if (this.disabled) {\n        return false;\n      }\n\n      if (boundaryRect && !instersect(boundaryRect, scrollRect, topOffset, bottomOffset)) {\n        return false;\n      }\n\n      var hideOffset = hideOnBoundaryHit ? wrapperRect.height + bottomOffset : 0;\n\n      if (mode === 'top') {\n        return holderRect.top + topOffset < scrollRect.top && scrollRect.top + hideOffset <= boundaryRect.bottom;\n      }\n\n      return holderRect.bottom - topOffset > scrollRect.bottom && scrollRect.bottom - hideOffset >= boundaryRect.top;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var _this$state = this.state,\n          fixed = _this$state.fixed,\n          height = _this$state.height;\n      var stickyClassName = props.stickyClassName,\n          stickyStyle = props.stickyStyle,\n          holderCmp = props.holderCmp,\n          wrapperCmp = props.wrapperCmp,\n          holderProps = props.holderProps,\n          children = props.children;\n      var wrapperProps = sanitizeProps(props, stickyOwnProps); // To ensure that this component becomes sticky immediately on mobile devices instead\n      // of disappearing until the scroll event completes, we add `transform: translateZ(0)`\n      // to 'kick' rendering of this element to the GPU\n      // @see http://stackoverflow.com/questions/32875046\n\n      var wrapperStyle = {\n        transform: 'translateZ(0)',\n        WebkitTransform: 'translateZ(0)'\n      };\n\n      if (wrapperProps.style) {\n        wrapperStyle = _objectSpread({}, wrapperStyle, {}, wrapperProps.style);\n      }\n\n      if (fixed) {\n        wrapperProps.className += ' ' + stickyClassName;\n        wrapperStyle = _objectSpread({}, wrapperStyle, {}, stickyStyle, {}, this.state.styles);\n      }\n\n      holderProps.style = _objectSpread({}, holderProps.style, {\n        minHeight: height + 'px'\n      });\n      holderProps.ref = this.createHolderRef;\n      wrapperProps.style = wrapperStyle;\n      wrapperProps.ref = this.createWrapperRef;\n      return _react.default.createElement(holderCmp, holderProps, _react.default.createElement(wrapperCmp, wrapperProps, children));\n    }\n  }]);\n\n  return Sticky;\n}(_react.Component); // some helpers\n\n\nexports.default = Sticky;\n\n_defineProperty(Sticky, \"propTypes\", {\n  mode: _propTypes.default.oneOf(['top', 'bottom']),\n  onFixedToggle: _propTypes.default.func,\n  stickyStyle: _propTypes.default.object,\n  stickyClassName: _propTypes.default.string,\n  hideOnBoundaryHit: _propTypes.default.bool,\n  offsetTransforms: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  boundaryElement: _propTypes.default.string,\n  scrollElement: _propTypes.default.any,\n  bottomOffset: _propTypes.default.number,\n  topOffset: _propTypes.default.number,\n  positionRecheckInterval: _propTypes.default.number,\n  noExceptionOnMissedScrollElement: _propTypes.default.bool,\n  wrapperCmp: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  holderCmp: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  holderProps: _propTypes.default.object\n});\n\n_defineProperty(Sticky, \"defaultProps\", {\n  className: '',\n  style: {},\n  mode: 'top',\n  holderCmp: 'div',\n  holderProps: {},\n  wrapperCmp: 'div',\n  stickyClassName: 'sticky',\n  stickyStyle: null,\n  hideOnBoundaryHit: true,\n  offsetTransforms: false,\n  disabled: false,\n  boundaryElement: null,\n  scrollElement: 'window',\n  topOffset: 0,\n  bottomOffset: 0,\n  noExceptionOnMissedScrollElement: false,\n  positionRecheckInterval: 0\n});\n\nfunction getRect(el) {\n  if (el && typeof el.getBoundingClientRect === 'function') {\n    return el.getBoundingClientRect();\n  }\n\n  if (el === window || el === document) {\n    return {\n      top: 0,\n      left: 0,\n      bottom: window.innerHeight,\n      height: window.innerHeight,\n      width: window.innerWidth,\n      right: window.innerWidth\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: 0,\n    height: 0\n  };\n}\n\nfunction instersect(r1, r2, topOffset, bottomOffset) {\n  var r1Top = r1.top + topOffset,\n      r1Bottom = r1.bottom + bottomOffset;\n  return r1Top >= r2.top && r1Top <= r2.bottom || r1Bottom >= r2.top && r1Bottom <= r2.bottom || r1Bottom >= r2.bottom && r1Top <= r2.top;\n}\n/**\n * Simply removes all unwanted props in order to avoid react 'unkown prop' warning\n * @param  {Object} props     that should be sanitized\n * @param  {Object} toRemove  array of prop names to remove\n * @return {Object}           cloned and sanitized props\n */\n\n\nfunction sanitizeProps(props, toRemove) {\n  props = _objectSpread({}, props);\n\n  for (var i = 0, l = toRemove.length; i < l; i += 1) {\n    delete props[toRemove[i]];\n  }\n\n  return props;\n}\n\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}