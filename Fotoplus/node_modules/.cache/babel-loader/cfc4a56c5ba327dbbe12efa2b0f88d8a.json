{"ast":null,"code":"/**!\r\n * lg-hash.js | 1.0.0 | October 5th 2016\r\n * http://sachinchoolur.github.io/lg-hash.js\r\n * Copyright (c) 2016 Sachin N; \r\n * @license GPLv3 \r\n */\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.LgHash = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      (function (global, factory) {\n        if (typeof define === \"function\" && define.amd) {\n          define([], factory);\n        } else if (typeof exports !== \"undefined\") {\n          factory();\n        } else {\n          var mod = {\n            exports: {}\n          };\n          factory();\n          global.lgHash = mod.exports;\n        }\n      })(this, function () {\n        'use strict';\n\n        var _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        var hashDefaults = {\n          hash: true\n        };\n\n        var Hash = function Hash(element) {\n          this.el = element;\n          this.core = window.lgData[this.el.getAttribute('lg-uid')];\n          this.core.s = _extends({}, hashDefaults, this.core.s);\n\n          if (this.core.s.hash) {\n            this.oldHash = window.location.hash;\n            this.init();\n          }\n\n          return this;\n        };\n\n        Hash.prototype.init = function () {\n          var _this = this;\n\n          var _hash; // Change hash value on after each slide transition\n\n\n          utils.on(_this.core.el, 'onAfterSlide.lgtm', function (event) {\n            window.location.hash = 'lg=' + _this.core.s.galleryId + '&slide=' + event.detail.index;\n          }); // Listen hash change and change the slide according to slide value\n\n          utils.on(window, 'hashchange.lghash', function () {\n            _hash = window.location.hash;\n\n            var _idx = parseInt(_hash.split('&slide=')[1], 10); // it galleryId doesn't exist in the url close the gallery\n\n\n            if (_hash.indexOf('lg=' + _this.core.s.galleryId) > -1) {\n              _this.core.slide(_idx, false, false);\n            } else if (_this.core.lGalleryOn) {\n              _this.core.destroy();\n            }\n          });\n        };\n\n        Hash.prototype.destroy = function () {\n          if (!this.core.s.hash) {\n            return;\n          } // Reset to old hash value\n\n\n          if (this.oldHash && this.oldHash.indexOf('lg=' + this.core.s.galleryId) < 0) {\n            window.location.hash = this.oldHash;\n          } else {\n            if (history.pushState) {\n              history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n              window.location.hash = '';\n            }\n          }\n\n          utils.off(this.core.el, '.lghash');\n        };\n\n        window.lgModules.hash = Hash;\n      });\n    }, {}]\n  }, {}, [1])(1);\n});","map":null,"metadata":{},"sourceType":"script"}