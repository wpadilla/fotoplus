{"ast":null,"code":"/**!\n * lg-share.js | 1.3.0 | May 20th 2020\n * http://sachinchoolur.github.io/lg-share.js\n * Copyright (c) 2016 Sachin N; \n * @license GPLv3 \n */\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.LgShare = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function () {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = \"function\" == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw a.code = \"MODULE_NOT_FOUND\", a;\n          }\n\n          var p = n[i] = {\n            exports: {}\n          };\n          e[i][0].call(p.exports, function (r) {\n            var n = e[i][1][r];\n            return o(n || r);\n          }, p, p.exports, r, e, n, t);\n        }\n\n        return n[i].exports;\n      }\n\n      for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) {\n        o(t[i]);\n      }\n\n      return o;\n    }\n\n    return r;\n  }()({\n    1: [function (require, module, exports) {\n      (function (global, factory) {\n        if (typeof define === \"function\" && define.amd) {\n          define([], factory);\n        } else if (typeof exports !== \"undefined\") {\n          factory();\n        } else {\n          var mod = {\n            exports: {}\n          };\n          factory();\n          global.lgShare = mod.exports;\n        }\n      })(this, function () {\n        'use strict';\n\n        var _extends = Object.assign || function (target) {\n          for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n              if (Object.prototype.hasOwnProperty.call(source, key)) {\n                target[key] = source[key];\n              }\n            }\n          }\n\n          return target;\n        };\n\n        var shareSefaults = {\n          share: true,\n          facebook: true,\n          facebookDropdownText: 'Facebook',\n          twitter: true,\n          twitterDropdownText: 'Twitter',\n          googlePlus: true,\n          googlePlusDropdownText: 'GooglePlus',\n          pinterest: true,\n          pinterestDropdownText: 'Pinterest'\n        };\n\n        function toCamelCase(input) {\n          return input.toLowerCase().replace(/-(.)/g, function (match, group1) {\n            return group1.toUpperCase();\n          });\n        }\n\n        var Share = function Share(element) {\n          this.el = element;\n          this.core = window.lgData[this.el.getAttribute('lg-uid')];\n          this.core.s = _extends({}, shareSefaults, this.core.s);\n\n          if (this.core.s.share) {\n            this.init();\n          }\n\n          return this;\n        };\n\n        Share.prototype.init = function () {\n          var _this = this;\n\n          var shareHtml = '<button aria-label=\"Share\" aria-haspopup=\"true\" aria-expanded=\"false\" id=\"lg-share\" class=\"lg-icon\">' + '<ul class=\"lg-dropdown\" style=\"position: absolute;\">';\n          shareHtml += _this.core.s.facebook ? '<li><a id=\"lg-share-facebook\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">' + this.core.s.facebookDropdownText + '</span></a></li>' : '';\n          shareHtml += _this.core.s.twitter ? '<li><a id=\"lg-share-twitter\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">' + this.core.s.twitterDropdownText + '</span></a></li>' : '';\n          shareHtml += _this.core.s.googlePlus ? '<li><a id=\"lg-share-googleplus\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">' + this.core.s.googlePlusDropdownText + '</span></a></li>' : '';\n          shareHtml += _this.core.s.pinterest ? '<li><a id=\"lg-share-pinterest\" target=\"_blank\"><span class=\"lg-icon\"></span><span class=\"lg-dropdown-text\">' + this.core.s.pinterestDropdownText + '</span></a></li>' : '';\n          shareHtml += '</ul></button>';\n          this.core.outer.querySelector('.lg-toolbar').insertAdjacentHTML('beforeend', shareHtml);\n          this.core.outer.querySelector('.lg').insertAdjacentHTML('beforeend', '<div id=\"lg-dropdown-overlay\"></div>');\n          var shareButton = document.getElementById('lg-share');\n          utils.on(shareButton, 'click.lg', function () {\n            if (utils.hasClass(_this.core.outer, 'lg-dropdown-active')) {\n              utils.removeClass(_this.core.outer, 'lg-dropdown-active');\n              shareButton.setAttribute('aria-expanded', false);\n            } else {\n              utils.addClass(_this.core.outer, 'lg-dropdown-active');\n              shareButton.setAttribute('aria-expanded', true);\n            }\n          });\n          utils.on(document.getElementById('lg-dropdown-overlay'), 'click.lg', function () {\n            utils.removeClass(_this.core.outer, 'lg-dropdown-active');\n            shareButton.setAttribute('aria-expanded', false);\n          });\n          utils.on(_this.core.el, 'onAfterSlide.lgtm', function (event) {\n            setTimeout(function () {\n              if (_this.core.s.facebook) {\n                document.getElementById('lg-share-facebook').setAttribute('href', 'https://www.facebook.com/sharer/sharer.php?u=' + _this.getSharePropsUrl(event.detail.index, 'data-facebook-share-url'));\n              }\n\n              if (_this.core.s.twitter) {\n                document.getElementById('lg-share-twitter').setAttribute('href', 'https://twitter.com/intent/tweet?text=' + _this.getShareProps(event.detail.index, 'data-tweet-text') + '&url=' + _this.getSharePropsUrl(event.detail.index, 'data-twitter-share-url'));\n              }\n\n              if (_this.core.s.googlePlus) {\n                document.getElementById('lg-share-googleplus').setAttribute('href', 'https://plus.google.com/share?url=' + _this.getSharePropsUrl(event.detail.index, 'data-googleplus-share-url'));\n              }\n\n              if (_this.core.s.pinterest) {\n                document.getElementById('lg-share-pinterest').setAttribute('href', 'http://www.pinterest.com/pin/create/button/?url=' + _this.getSharePropsUrl(event.detail.index, 'data-pinterest-share-url') + '&media=' + encodeURIComponent(_this.getShareProps(event.detail.index, 'href') || _this.getShareProps(event.detail.index, 'data-src')) + '&description=' + _this.getShareProps(event.detail.index, 'data-pinterest-text'));\n              }\n            }, 100);\n          });\n        };\n\n        Share.prototype.getSharePropsUrl = function (index, prop) {\n          var shareProp = this.getShareProps(index, prop);\n\n          if (!shareProp) {\n            shareProp = window.location.href;\n          }\n\n          return encodeURIComponent(shareProp);\n        };\n\n        Share.prototype.getShareProps = function (index, prop) {\n          var shareProp = '';\n\n          if (this.core.s.dynamic) {\n            shareProp = this.core.items[index][toCamelCase(prop.replace('data-', ''))];\n          } else if (this.core.items[index].getAttribute(prop)) {\n            shareProp = this.core.items[index].getAttribute(prop);\n          }\n\n          return shareProp;\n        };\n\n        Share.prototype.destroy = function () {};\n\n        window.lgModules.share = Share;\n      });\n    }, {}]\n  }, {}, [1])(1);\n});","map":null,"metadata":{},"sourceType":"script"}