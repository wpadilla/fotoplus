{"version":3,"sources":["components/product/sub-components/ProductRating.js","pages/other/Compare.js"],"names":["ProductRating","ratingValue","rating","i","push","className","key","connect","state","cartItems","cartData","compareItems","compareData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","deleteFromCompare","location","pathname","useToasts","name","content","to","process","headerTop","length","map","compareItem","cartItem","filter","id","onClick","src","image","alt","affiliateLink","href","rel","target","variation","stock","undefined","quantity","disabled","title","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","currencySymbol","shortDescription"],"mappings":"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","file":"static/js/22.1684c9c2.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst ProductRating = ({ ratingValue }) => {\r\n  let rating = [];\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\r\n  }\r\n  if (ratingValue && ratingValue > 0) {\r\n    for (let i = 0; i <= ratingValue - 1; i++) {\r\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\r\n    }\r\n  }\r\n  return <Fragment>{rating}</Fragment>;\r\n};\r\n\r\nProductRating.propTypes = {\r\n  ratingValue: PropTypes.number\r\n};\r\n\r\nexport default ProductRating;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { deleteFromCompare } from \"../../redux/actions/compareActions\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport Rating from \"../../components/product/sub-components/ProductRating\";\r\n\r\nconst Compare = ({\r\n  location,\r\n  cartItems,\r\n  compareItems,\r\n  addToCart,\r\n  deleteFromCompare,\r\n  currency\r\n}) => {\r\n  const { pathname } = location;\r\n  const { addToast } = useToasts();\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>Fotoplus | Comparar</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Fotoplus - La vida es para imprimirla.\"\r\n        />\r\n      </MetaTags>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Inicio</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Comparar\r\n      </BreadcrumbsItem>\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"compare-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {compareItems && compareItems.length >= 1 ? (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"compare-page-content\">\r\n                    <div className=\"compare-table table-responsive\">\r\n                      <table className=\"table table-bordered mb-0\">\r\n                        <tbody>\r\n                          <tr>\r\n                            <th className=\"title-column\">Product Info</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              const cartItem = cartItems.filter(\r\n                                item => item.id === compareItem.id\r\n                              )[0];\r\n                              return (\r\n                                <td className=\"product-image-title\" key={key}>\r\n                                  <div className=\"compare-remove\">\r\n                                    <button\r\n                                      onClick={() =>\r\n                                        deleteFromCompare(compareItem, addToast)\r\n                                      }\r\n                                    >\r\n                                      <i className=\"pe-7s-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      compareItem.id\r\n                                    }\r\n                                    className=\"image\"\r\n                                  >\r\n                                    <img\r\n                                      className=\"img-fluid\"\r\n                                      src={\r\n                                        process.env.PUBLIC_URL +\r\n                                        compareItem.image[0]\r\n                                      }\r\n                                      alt=\"\"\r\n                                    />\r\n                                  </Link>\r\n                                  <div className=\"product-title\">\r\n                                    <Link\r\n                                      to={\r\n                                        process.env.PUBLIC_URL +\r\n                                        \"/product/\" +\r\n                                        compareItem.id\r\n                                      }\r\n                                    >\r\n                                      {compareItem.name}\r\n                                    </Link>\r\n                                  </div>\r\n                                  <div className=\"compare-btn\">\r\n                                    {compareItem.affiliateLink ? (\r\n                                      <a\r\n                                        href={compareItem.affiliateLink}\r\n                                        rel=\"noopener noreferrer\"\r\n                                        target=\"_blank\"\r\n                                      >\r\n                                        {\" \"}\r\n                                        Buy now{\" \"}\r\n                                      </a>\r\n                                    ) : compareItem.variation &&\r\n                                      compareItem.variation.length >= 1 ? (\r\n                                      <Link\r\n                                        to={`${process.env.PUBLIC_URL}/product/${compareItem.id}`}\r\n                                      >\r\n                                        Selecciona una opcion\r\n                                      </Link>\r\n                                    ) : compareItem.stock &&\r\n                                      compareItem.stock > 0 ? (\r\n                                      <button\r\n                                        onClick={() =>\r\n                                          addToCart(compareItem, addToast)\r\n                                        }\r\n                                        className={\r\n                                          cartItem !== undefined &&\r\n                                          cartItem.quantity > 0\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                        }\r\n                                        disabled={\r\n                                          cartItem !== undefined &&\r\n                                          cartItem.quantity > 0\r\n                                        }\r\n                                        title={\r\n                                          compareItem !== undefined\r\n                                            ? \"Added to cart\"\r\n                                            : \"Add to cart\"\r\n                                        }\r\n                                      >\r\n                                        {cartItem !== undefined &&\r\n                                        cartItem.quantity > 0\r\n                                          ? \"Added\"\r\n                                          : \"Add to cart\"}\r\n                                      </button>\r\n                                    ) : (\r\n                                      <button disabled className=\"active\">\r\n                                        Agotado\r\n                                      </button>\r\n                                    )}\r\n                                  </div>\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                          <tr>\r\n                            <th className=\"title-column\">Price</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              const discountedPrice = getDiscountPrice(\r\n                                compareItem.price,\r\n                                compareItem.discount\r\n                              );\r\n                              const finalProductPrice = (\r\n                                compareItem.price * currency.currencyRate\r\n                              ).toFixed(2);\r\n                              const finalDiscountedPrice = (\r\n                                discountedPrice * currency.currencyRate\r\n                              ).toFixed(2);\r\n                              return (\r\n                                <td className=\"product-price\" key={key}>\r\n                                  {discountedPrice !== null ? (\r\n                                    <Fragment>\r\n                                      <span className=\"amount old\">\r\n                                        {currency.currencySymbol +\r\n                                          finalProductPrice}\r\n                                      </span>\r\n                                      <span className=\"amount\">\r\n                                        {currency.currencySymbol +\r\n                                          finalDiscountedPrice}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className=\"amount\">\r\n                                      {currency.currencySymbol +\r\n                                        finalProductPrice}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th className=\"title-column\">Descripción</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              return (\r\n                                <td className=\"product-desc\" key={key}>\r\n                                  <p>\r\n                                    {compareItem.shortDescription\r\n                                      ? compareItem.shortDescription\r\n                                      : \"N/A\"}\r\n                                  </p>\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <th className=\"title-column\">Clasificación</th>\r\n                            {compareItems.map((compareItem, key) => {\r\n                              return (\r\n                                <td className=\"product-rating\" key={key}>\r\n                                  <Rating ratingValue={compareItem.rating} />\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-shuffle\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                    No se encontraron elementos en comparar <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop\"}>\r\n                      Agregar artículos\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCompare.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  location: PropTypes.object,\r\n  deleteFromCompare: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    compareItems: state.compareData,\r\n    currency: state.currencyData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n\r\n    deleteFromCompare: (item, addToast) => {\r\n      dispatch(deleteFromCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Compare);\r\n"],"sourceRoot":""}